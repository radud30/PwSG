using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using t3d;
using punkt;

namespace przestrzen3d
{
    public partial class Form1 : Form
    {
        private double r = 10, fi = 45, teta = 60;      //pozycja obserwatora we współrzędnych sferycznych

        public Form1()
        {
            InitializeComponent();
        }

        private void mojPanel1_Paint(object sender, PaintEventArgs e)
        {
            Graphics g = e.Graphics;
            Punkt obserwator = Punkt.RFiTetaToXYZ(r, fi, teta);    //konwersja sferycznych do kartezjanskich
            T3d projektor = new T3d(obserwator, mojPanel1.ClientRectangle);


            Punkt[] p = { new Punkt(0, 0, 1),           //ostrosłup
                          new Punkt(1, 0, 0),
                          new Punkt(0, 1, 0),
                          new Punkt(-1, 0, 0),
                          new Punkt(0, -1, 0) };
            Point[] ep = new Point[5];

            for (int i = 0; i < p.Length; i++)          //konwersja punktów 3d na ekran
                projektor.punkt_3d(out ep[i], p[i]);


            g.DrawLine(Pens.Yellow, ep[1], ep[2]);    //podstawa ostrosłupa
            g.DrawLine(Pens.Yellow, ep[2], ep[3]);
            g.DrawLine(Pens.Yellow, ep[3], ep[4]);
            g.DrawLine(Pens.Yellow, ep[4], ep[1]);

            g.DrawLine(Pens.Yellow, ep[1], ep[0]);    //boki.
            g.DrawLine(Pens.Yellow, ep[2], ep[0]);
            g.DrawLine(Pens.Yellow, ep[3], ep[0]);
            g.DrawLine(Pens.Yellow, ep[4], ep[0]);

        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            fi += 1;
            if (fi >= 360)
                fi -= 360;
            mojPanel1.Invalidate();
        }

        private void trackBar1_Scroll(object sender, EventArgs e) // zmiana r poprzez trackbar oddalenie-przybliżenie
        {
            r = trackBar1.Value;
            mojPanel1.Invalidate();
        }

        private void trackBar2_Scroll(object sender, EventArgs e) // zmiana fi poprzez trackbar obrót wokół własnej osi lewo-prawo
        {
            fi = trackBar2.Value;
            mojPanel1.Invalidate();
        }

        private void trackBar3_Scroll(object sender, EventArgs e) // zmian teta poprzez trackbar obrót góra-dół
        {
            teta = trackBar3.Value;
            mojPanel1.Invalidate();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            timer1.Enabled = true;
        }

        private void button2_Click(object sender, EventArgs e)
        {
            timer1.Enabled = false;
        }
    }

    public class MojPanel : Panel
    {
        public MojPanel()
        {
            BackColor = Color.Black;
            DoubleBuffered = true;
        }
    }
}
